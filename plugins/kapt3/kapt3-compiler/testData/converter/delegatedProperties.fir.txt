package test;

/**
 * public final class test/A : kotlin/Any {
 *
 *   // signature: <init>()V
 *   public constructor()
 *
 *   // getter: getA()Ltest/C;
 *   // synthetic method for delegate: getA$delegate(Ltest/A;)Ljava/lang/Object;
 *   public final (* delegated *) val a: test/C<kotlin/String>
 *     public final (* non-default *) get
 *
 *   // getter: getB()Ltest/C;
 *   // synthetic method for delegate: getB$delegate(Ltest/A;)Ljava/lang/Object;
 *   public final (* delegated *) val b: test/C<kotlin/String>
 *     public final (* non-default *) get
 *
 *   // getter: getC()Ltest/C;
 *   // synthetic method for delegate: getC$delegate(Ltest/A;)Ljava/lang/Object;
 *   public final (* delegated *) val c: test/C<kotlin/String>
 *     public final (* non-default *) get
 *
 *   // getter: getX()Lerror/NonExistentClass;
 *   // synthetic method for annotations: getX$annotations()V
 *   // synthetic method for delegate: getX$delegate(Ltest/A;)Ljava/lang/Object;
 *   public final (* delegated *) val x: error/NonExistentClass
 *     public final (* non-default *) get
 *
 *   // getter: getY()Ljava/lang/String;
 *   // synthetic method for delegate: getY$delegate(Ltest/A;)Ljava/lang/Object;
 *   public final (* delegated *) val y: kotlin/String
 *     public final (* non-default *) get
 *
 *   // getter: getZ()Ljava/lang/String;
 *   // synthetic method for delegate: getZ$delegate(Ltest/A;)Ljava/lang/Object;
 *   public final (* delegated *) val z: kotlin/String
 *     public final (* non-default *) get
 *
 *   // module name: main
 * }
 */
@kotlin.Metadata()
public final class A {

    public A() {
        super();
    }

    @org.jetbrains.annotations.NotNull()
    public final error.NonExistentClass getX() {
        return null;
    }

    @kotlin.Suppress(names = {"UNRESOLVED_REFERENCE"})
    @java.lang.Deprecated()
    public static void getX$annotations() {
    }

    @org.jetbrains.annotations.NotNull()
    public final java.lang.String getZ() {
        return null;
    }

    @org.jetbrains.annotations.NotNull()
    public final java.lang.String getY() {
        return null;
    }

    @org.jetbrains.annotations.NotNull()
    public final test.C<java.lang.String> getA() {
        return null;
    }

    @org.jetbrains.annotations.NotNull()
    public final test.C<java.lang.String> getB() {
        return null;
    }

    @org.jetbrains.annotations.NotNull()
    public final test.C<java.lang.String> getC() {
        return null;
    }

    private static java.lang.Object getA$delegate(test.A p0) {
        return null;
    }

    private static java.lang.Object getB$delegate(test.A p0) {
        return null;
    }

    private static java.lang.Object getC$delegate(test.A p0) {
        return null;
    }

    private static java.lang.Object getX$delegate(test.A p0) {
        return null;
    }

    private static java.lang.Object getY$delegate(test.A p0) {
        return null;
    }

    private static java.lang.Object getZ$delegate(test.A p0) {
        return null;
    }
}

////////////////////

package test;

/**
 * public open class test/C<T#0 (* T *)> : kotlin/Any {
 *
 *   // signature: <init>(Ljava/lang/Object;)V
 *   public constructor(v: T#0)
 *
 *   // signature: getValue(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
 *   public final operator fun getValue(p1: kotlin/Any?, p2: kotlin/Any?): T#0
 *
 *   // module name: main
 * }
 */
@kotlin.Metadata()
public class C<T extends java.lang.Object> {

    public C(T v) {
        super();
    }

    public final T getValue(@org.jetbrains.annotations.Nullable()
    java.lang.Object p1, @org.jetbrains.annotations.Nullable()
    java.lang.Object p2) {
        return null;
    }
}
