import kotlin.reflect.KProperty;

/**
 * package {
 *
 *   // getter: getDelegate()Ljava/lang/Object;
 *   // setter: setDelegate(Ljava/lang/Object;)V
 *   // synthetic method for delegate: getDelegate$delegate()Ljava/lang/Object;
 *   public final (* delegated *) var delegate: kotlin/Any
 *     public final (* non-default *) get
 *     public final (* non-default *) set(<set-?>: kotlin/Any)
 *
 *   // module name: main
 * }
 */
@kotlin.Metadata()
public final class AnonymousDelegateKt {

    public AnonymousDelegateKt() {
        super();
    }

    public static final void setDelegate(@org.jetbrains.annotations.NotNull()
    java.lang.Object p0) {
    }

    @org.jetbrains.annotations.NotNull()
    public static final java.lang.Object getDelegate() {
        return null;
    }

    private static java.lang.Object getDelegate$delegate() {
        return null;
    }
}

////////////////////


import kotlin.reflect.KProperty;

/**
 * public final class ConcreteDelegate : kotlin/Any {
 *
 *   // signature: <init>()V
 *   public constructor()
 *
 *   // signature: getValue(Ljava/lang/Object;Lkotlin/reflect/KProperty;)I
 *   public final operator fun getValue(t: kotlin/Any?, p: kotlin/reflect/KProperty<*>): kotlin/Int
 *
 *   // module name: main
 * }
 */
@kotlin.Metadata()
public final class ConcreteDelegate {

    public ConcreteDelegate() {
        super();
    }

    public final int getValue(@org.jetbrains.annotations.Nullable()
    java.lang.Object t, @org.jetbrains.annotations.NotNull()
    kotlin.reflect.KProperty<?> p) {
        return 0;
    }
}

////////////////////


import kotlin.reflect.KProperty;

/**
 * public final class Test : kotlin/Any {
 *
 *   // signature: <init>()V
 *   public constructor()
 *
 *   // getter: getBroken()Ljava/lang/Object;
 *   // setter: setBroken(Ljava/lang/Object;)V
 *   // synthetic method for delegate: getBroken$delegate(LTest;)Ljava/lang/Object;
 *   public final (* delegated *) var broken: kotlin/Any
 *     public final (* non-default *) get
 *     public final (* non-default *) set(<set-?>: kotlin/Any)
 *
 *   // getter: getConcreteDelegate()I
 *   // synthetic method for delegate: getConcreteDelegate$delegate(LTest;)Ljava/lang/Object;
 *   public final (* delegated *) val concreteDelegate: kotlin/Int
 *     public final (* non-default *) get
 *
 *   // getter: getLazyProp()Ljava/lang/Object;
 *   // synthetic method for delegate: getLazyProp$delegate(LTest;)Ljava/lang/Object;
 *   private final (* delegated *) val lazyProp: .kotlin/Any
 *     private final (* non-default *) get
 *
 *   // getter: getOverridden()Ljava/lang/Object;
 *   // setter: setOverridden(Ljava/lang/Object;)V
 *   // synthetic method for delegate: getOverridden$delegate(LTest;)Ljava/lang/Object;
 *   public final (* delegated *) var overridden: kotlin/Any
 *     public final (* non-default *) get
 *     public final (* non-default *) set(<set-?>: kotlin/Any)
 *
 *   // module name: main
 * }
 */
@kotlin.Metadata()
public final class Test {

    public Test() {
        super();
    }

    public final void setBroken(@org.jetbrains.annotations.NotNull()
    java.lang.Object p0) {
    }

    @org.jetbrains.annotations.NotNull()
    public final java.lang.Object getBroken() {
        return null;
    }

    public final void setOverridden(@org.jetbrains.annotations.NotNull()
    java.lang.Object p0) {
    }

    @org.jetbrains.annotations.NotNull()
    public final java.lang.Object getOverridden() {
        return null;
    }

    private final java.lang.Object getLazyProp() {
        return null;
    }

    public final int getConcreteDelegate() {
        return 0;
    }

    private static java.lang.Object getBroken$delegate(Test p0) {
        return null;
    }

    private static java.lang.Object getConcreteDelegate$delegate(Test p0) {
        return null;
    }

    private static java.lang.Object getLazyProp$delegate(Test p0) {
        return null;
    }

    private static java.lang.Object getOverridden$delegate(Test p0) {
        return null;
    }
}
