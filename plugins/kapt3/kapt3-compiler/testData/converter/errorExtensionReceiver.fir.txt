/**
 * public final class TypeHook : kotlin/Any {
 *
 *   // signature: <init>()V
 *   public constructor()
 *
 *   // signature: receiverFunction(Lerror/NonExistentClass;)Lerror/NonExistentClass;
 *   public final fun error/NonExistentClass.receiverFunction(): error/NonExistentClass
 *
 *   // getter: getCustomProperty()Lerror/NonExistentClass;
 *   // setter: setCustomProperty(Lerror/NonExistentClass;)V
 *   public final var customProperty: error/NonExistentClass
 *     public final (* non-default *) get
 *     public final (* non-default *) set(value: error/NonExistentClass)
 *
 *   // getter: getReceiverProperty(Lerror/NonExistentClass;)Lerror/NonExistentClass;
 *   // setter: setReceiverProperty(Lerror/NonExistentClass;Lerror/NonExistentClass;)V
 *   public final var error/NonExistentClass.receiverProperty: error/NonExistentClass
 *     public final (* non-default *) get
 *     public final (* non-default *) set(value: error/NonExistentClass)
 *
 *   // companion object: Companion
 *
 *   // nested class: Companion
 *
 *   // module name: main
 * }
 */
@kotlin.Metadata()
@kotlin.Suppress(names = {"UNRESOLVED_REFERENCE"})
public final class TypeHook {
    @org.jetbrains.annotations.NotNull()
    public static final TypeHook.Companion Companion = null;

    public TypeHook() {
        super();
    }

    @org.jetbrains.annotations.NotNull()
    public final java.lang.Object getCustomProperty() {
        return null;
    }

    public final void setCustomProperty(@org.jetbrains.annotations.NotNull()
    java.lang.Object value) {
    }

    @org.jetbrains.annotations.NotNull()
    public final java.lang.Object getReceiverProperty(@org.jetbrains.annotations.NotNull()
    java.lang.Object $this$receiverProperty) {
        return null;
    }

    public final void setReceiverProperty(@org.jetbrains.annotations.NotNull()
    java.lang.Object $this$receiverProperty, @org.jetbrains.annotations.NotNull()
    java.lang.Object value) {
    }

    @org.jetbrains.annotations.NotNull()
    public final java.lang.Object receiverFunction(@org.jetbrains.annotations.NotNull()
    java.lang.Object $this$receiverFunction) {
        return null;
    }

    /**
     * public final companion object TypeHook.Companion : kotlin/Any {
     *
     *   // signature: <init>()V
     *   private constructor()
     *
     *   // getter: getExtensionProperty(Lerror/NonExistentClass;)Lerror/NonExistentClass;
     *   // setter: setExtensionProperty(Lerror/NonExistentClass;Lerror/NonExistentClass;)V
     *   public final var error/NonExistentClass.extensionProperty: error/NonExistentClass
     *     public final (* non-default *) get
     *     public final (* non-default *) set(value: error/NonExistentClass)
     *
     *   // module name: main
     * }
     */
    @kotlin.Metadata()
    public static final class Companion {

        private Companion() {
            super();
        }

        @org.jetbrains.annotations.NotNull()
        public final java.lang.Object getExtensionProperty(@org.jetbrains.annotations.NotNull()
        java.lang.Object $this$extensionProperty) {
            return null;
        }

        public final void setExtensionProperty(@org.jetbrains.annotations.NotNull()
        java.lang.Object $this$extensionProperty, @org.jetbrains.annotations.NotNull()
        java.lang.Object value) {
        }
    }
}
